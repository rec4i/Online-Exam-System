@{
    Layout = "~/Views/Shared/Anasayfa_Layout.cshtml";
}
<script type="text/javascript"
    src="https://cdnjs.cloudflare.com/ajax/libs/jquery-maskmoney/3.0.2/jquery.maskMoney.min.js"></script>
<link rel="stylesheet" href="https://unpkg.com/bootstrap-table@1.19.1/dist/bootstrap-table.min.css">
<script src="https://unpkg.com/bootstrap-table@1.19.1/dist/bootstrap-table.min.js"></script>
<script>
    function ajaxRequest(params) {
        $.ajax({
            url: "/api/Exam/Exam_Get_All_With_Pagination",
            type: 'POST',
            async: false,
            dataType: "json",
            data: '{' +
                '"offset":"' + params.data.offset + '",' +
                '"limit":"' + params.data.limit + '",' +
                '"search":"' + params.data.search + '"' +
                '}',
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var temp = data
                var rows = []
                console.log(data)
                for (i = 0; i < temp.rows.length; i++) {
                    var x = {
                        'Start_Date': temp.rows[i].exam_Strat_Date.replaceAll('T', ' '),
                        'End_Date': temp.rows[i].exam_End_Date.replaceAll('T', ' '),
                        'Question_Per_Sercond': temp.rows[i].exam_Question_Per_Second,
                        'Number_Of_Question': temp.rows[i].exam_Number_Of_Questions,
                        'Exam_Link': '<button class="btn btn-primary btn-sm" value="' + temp.rows[i].exam_Connection_Id + '" id="Exam_Link" style="word-break: keep-all;"><i class="fa fa-copy "></i> Copy Link</button>',
                        'Edit': '<button class="btn btn-warning btn-sm" value="' + temp.rows[i].id + '" id="Edit" style="word-break: keep-all;"><i class="fa fa-file-text "></i> Edit</button>',
                        'Delete': '<button class="btn btn-danger btn-sm" value="' + temp.rows[i].id + '" id="Delete" style="word-break: keep-all;"><i class="fa fa-trash "></i> Delete</button>'

                    }
                    rows.push(x)

                }
                temp.rows = rows
                params.success(temp)


            },
            error: function () {
                alert('Talep esnasında sorun oluştu.Yeniden deneyin');
            }
        });

    }
</script>

<script>
    $(document).ready(function () {
        $('#Create_Exam').click(function () {
            $('#Exam_Modal').modal('show')
        })

        $('#Save_Exam').click(function () {
            var is_sendable = 1;
            var x = {
                Exam_Strat_Date: $('#Exam_Strat_Date').val(),
                Exam_End_Date: $('#Exam_End_Date').val(),
                Exam_Question_Per_Second: $('#Question_Per_Second').val(),
                Exam_Number_Of_Questions: $('#Number_Of_Questions').val(),
                Question_Pool_Id: $('#Question_Pool_Select').find('option:selected').attr('value')
            }

            if (x.Question_Pool_Id == "") {
                $('#Question_Pools').attr('class', 'form-control is-invalid')
                is_sendable = 0;
            }
            else {
                $('#Question_Pools').attr('class', 'form-control')
                is_sendable = 1;
            }

            if (x.Exam_Strat_Date == "") {
                $('#Exam_Strat_Date').attr('class', 'form-control is-invalid')
                is_sendable = 0;
            }
            else {
                $('#Exam_Strat_Date').attr('class', 'form-control')
                is_sendable = 1;
            }

            if (x.Exam_End_Date == "") {
                $('#Exam_End_Date').attr('class', 'form-control is-invalid')
                is_sendable = 0;
            }
            else {
                $('#Exam_End_Date').attr('class', 'form-control')
                is_sendable = 1;
            }

            if (x.Exam_Question_Per_Second == "") {
                $('#Question_Per_Second').attr('class', 'form-control is-invalid')
                is_sendable = 0;
            }
            else {
                $('#Question_Per_Second').attr('class', 'form-control')
                is_sendable = 1;
            }

            if (x.Exam_Number_Of_Question == "") {
                $('#Number_Of_Questions').attr('class', 'form-control is-invalid')
                is_sendable = 0;
            }
            else {
                $('#Number_Of_Questions').attr('class', 'form-control')
                is_sendable = 1;
            }
            if (is_sendable == 1) {
                console.log(JSON.stringify(x))
                $.ajax({
                    url: 'api/Exam/Exam_Add',
                    type: 'POST',
                    async: false,
                    dataType: "json",
                    data: JSON.stringify(x),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        Create_Exams_Table($('#Exams_Table'), 0, 0)
                    },
                    error: function (xhr, status, error) {
                        if (xhr.status == 200) {

                        }
                        else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Talep Esnasında Bir Hata Oluştur',
                                text: '' + xhr.status + '   ' + error,
                            })
                        }

                    }
                })

            }
        })

        Create_Exams_Table($('#Exams_Table'), 0, 0)
        function Create_Exams_Table($el, cells, rows) {

            $el.bootstrapTable('destroy');

            var i; var j; var row
            var columns = [];
            var data__ = [];

            columns.push({
                field: 'Start_Date',
                title: 'Strat Date',
                sortable: true
            })
            columns.push({
                field: 'End_Date',
                title: 'End Date',
                sortable: true
            })
            columns.push({
                field: 'Question_Per_Sercond',
                title: 'Question Per Second',
                sortable: true
            })
            columns.push({
                field: 'Number_Of_Question',
                title: 'Number Of Question',
                sortable: true
            })
            columns.push({
                field: 'Question_Pool',
                title: 'Question Pool',
                sortable: true
            })
            columns.push({
                field: 'Exam_Link',
                title: 'Exam Link',
                sortable: true
            })
            columns.push({
                field: 'Delete',
                title: 'Delete',
                sortable: true
            })

            columns.push({
                field: 'Edit',
                title: 'Edit',
                sortable: true
            })



            $el.bootstrapTable({
                sidePagination: "server",
                pagination: true,
                ajax: "ajaxRequest",
                clickToSelect: true,
                columns: columns,
                data: data__,
                onPostBody: function () {

                    $('button[id=Exam_Link]').click(function () {

                        const url = new URL(window.location.href);
                        var Connetion_Link = url.origin + "/ExamScreen?Exam_Guid=" + $(this).attr('value')
                        navigator.clipboard.writeText(Connetion_Link);
                        Swal.fire({
                            icon: 'success',
                            title: 'Link successfully copied',
                        })

                    })
                    $('button[id=Delete]').click(function () {
                        console.log($(this).attr('value'))
                        Swal.fire({
                            title: 'Are you sure?',
                            text: "You won't be able to revert this!",
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Yes, delete it!'
                        }).then((result) => {
                            if (result.isConfirmed) {

                                var x = {
                                    id: $(this).attr('value')
                                }
                                $.ajax({
                                    url: 'api/Exam/Exam_Delete',
                                    type: 'POST',
                                    async: false,
                                    dataType: "json",
                                    data: JSON.stringify(x),
                                    contentType: "application/json; charset=utf-8",
                                    success: function (data) {
                                        Swal.fire(
                                            'Deleted!',
                                            'success'
                                        )
                                        Create_Question_Table($('#Questions_Table'), 0, 0)

                                    },
                                    error: function (xhr, status, error) {
                                        if (xhr.status == 200) {

                                        }
                                        else {
                                            Swal.fire({
                                                icon: 'error',
                                                title: 'Talep Esnasında Bir Hata Oluştur',
                                                text: '' + xhr.status + '   ' + error.Message,
                                            })
                                        }

                                    }
                                })
                            }
                        })

                    })
                    $('button[id=Edit]').click(function () {
                        console.log($(this).attr('value'))

                        $('#Questions_Modal_Edit').modal('show')
                        $('#Edit_Question').attr('Question_Id', $(this).attr('value'))

                        Load_Answers($(this).attr('value'))



                    })
                }

            })

        }

        FillQuestion_Pool_Select()
        function FillQuestion_Pool_Select() {
            $.ajax({
                url: 'api/QuestionPool/QuestionPool_Get_All',
                type: 'POST',
                async: false,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    console.log(data)
                    $('#Question_Pool_Select').empty()
                    for (var i = 0; i < data.length; i++) {
                        $('#Question_Pool_Select').append('<option value="' + data[i].id + '">' + data[i].pool_Name + '</option>')
                    }
                },
                error: function (xhr, status, error) {
                    if (xhr.status == 200) {

                    }
                    else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Talep Esnasında Bir Hata Oluştur',
                            text: '' + xhr.status + '   ' + error.Message,
                        })
                    }

                }
            })



        }








    })
</script>

<div class="modal fade" id="Exam_Modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="Exam_Modal_Header">Create Question</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <select class="form-control" id="Question_Pool_Select"></select>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6"><label for="">Exam Strat Date: </label></div>
                    <div class="col-md-6"><label for="">Exam End Date: </label></div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <input type="datetime-local" id="Exam_Strat_Date" class="form-control">
                    </div>
                    <div class="col-md-6">
                        <input type="datetime-local" id="Exam_End_Date" class="form-control">
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <label for="">Question Per Second: </label>
                    </div>
                    <div class="col-md-6">
                        <label for="">Number Of Questions: </label>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <input type="number" id="Question_Per_Second" class="form-control">
                    </div>
                    <div class="col-md-6">
                        <input type="number" id="Number_Of_Questions" class="form-control">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" id="Save_Exam" class="btn btn-primary">Save
                </button>
            </div>
        </div>
    </div>
</div>



<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header"><label>Create Exam</label></div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-10"></div>
                    <div class="col-md-2">
                        <button type="button" id="Create_Exam" class="btn btn-block btn-primary"><i
                                class="fa fa-fw fa-plus"></i>Create
                            Exam</button>
                    </div>
                </div>
                <div class="row" style="padding-top: 25px;">
                    <div class="col-md-12">
                        <table id="Exams_Table"></table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>